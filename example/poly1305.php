<?php
/**
 * example from:
 *   poly1305_power_on_self_test
 *   https://github.com/floodyberry/poly1305-donna
 */

include "../autoload.php";

$nacl_key = array(
0xee,0xa6,0xa7,0x25,0x1c,0x1e,0x72,0x91,
0x6d,0x11,0xc2,0xcb,0x21,0x4d,0x3c,0x25,
0x25,0x39,0x12,0x1d,0x8e,0x23,0x4e,0x65,
0x2d,0x65,0x1f,0xa4,0xc8,0xcf,0xf8,0x80,
);

$nacl_msg = array(
0x8e,0x99,0x3b,0x9f,0x48,0x68,0x12,0x73,
0xc2,0x96,0x50,0xba,0x32,0xfc,0x76,0xce,
0x48,0x33,0x2e,0xa7,0x16,0x4d,0x96,0xa4,
0x47,0x6f,0xb8,0xc5,0x31,0xa1,0x18,0x6a,
0xc0,0xdf,0xc1,0x7c,0x98,0xdc,0xe8,0x7b,
0x4d,0xa7,0xf0,0x11,0xec,0x48,0xc9,0x72,
0x71,0xd2,0xc2,0x0f,0x9b,0x92,0x8f,0xe2,
0x27,0x0d,0x6f,0xb8,0x63,0xd5,0x17,0x38,
0xb4,0x8e,0xee,0xe3,0x14,0xa7,0xcc,0x8a,
0xb9,0x32,0x16,0x45,0x48,0xe5,0x26,0xae,
0x90,0x22,0x43,0x68,0x51,0x7a,0xcf,0xea,
0xbd,0x6b,0xb3,0x73,0x2b,0xc0,0xe9,0xda,
0x99,0x83,0x2b,0x61,0xca,0x01,0xb6,0xde,
0x56,0x24,0x4a,0x9e,0x88,0xd5,0xf9,0xb3,
0x79,0x73,0xf6,0x22,0xa4,0x3d,0x14,0xa6,
0x59,0x9b,0x1f,0x65,0x4c,0xb4,0x5a,0x74,
0xe3,0x55,0xa5
);

$nacl_mac = array(
0xf3,0xff,0xc7,0x70,0x3f,0x94,0x00,0xe5,
0x2a,0x7d,0xfb,0x4b,0x3d,0x33,0x05,0xd9
);

$wrap_key = array(
0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
);

$wrap_msg = array(
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
);

$wrap_mac = array(
0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
);

$total_key = array(
0x01,0x02,0x03,0x04,0x05,0x06,0x07,
0xff,0xfe,0xfd,0xfc,0xfb,0xfa,0xf9,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x00,0x00,0x00,0x00
);

$total_mac = array(
0x64,0xaf,0xe2,0xe8,0xd6,0xad,0x7b,0xbd,
0xd2,0x87,0xf9,0x7c,0x44,0x62,0x3d,0x39
);

$poly1305 = new Poly1305();
$all_key = new SplFixedArray(32);
$all_msg = new SplFixedArray(256);
$mac = new SplFixedArray(16);
$result = 1;
$salt = Salt::instance();
$mac = $salt->crypto_onetimeauth($nacl_msg, count($nacl_msg), $nacl_key);
$result &= Salt::equal($nacl_mac, $mac);

for ($i = 0; $i < 16; ++$i) $mac[$i] = 0;

$ctx = $poly1305->init($nacl_key);
$poly1305->update($ctx, $nacl_msg, 32);
$poly1305->update($ctx, array_slice($nacl_msg,   32), 64);
$poly1305->update($ctx, array_slice($nacl_msg,   96), 16);
$poly1305->update($ctx, array_slice($nacl_msg,  112),  8);
$poly1305->update($ctx, array_slice($nacl_msg,  120),  4);
$poly1305->update($ctx, array_slice($nacl_msg,  124),  2);
$poly1305->update($ctx, array_slice($nacl_msg,  126),  1);
$poly1305->update($ctx, array_slice($nacl_msg,  127),  1);
$poly1305->update($ctx, array_slice($nacl_msg,  128),  1);
$poly1305->update($ctx, array_slice($nacl_msg,  129),  1);
$poly1305->update($ctx, array_slice($nacl_msg,  130),  1);
$poly1305->finish($ctx, $mac);

$result &= Salt::equal($nacl_mac, $mac);

for ($i = 0; $i < 16; ++$i) $mac[$i] = 0;

$mac = $salt->crypto_onetimeauth($wrap_msg, count($wrap_msg), $wrap_key);
$result &= Salt::equal($wrap_mac, $mac);

$total_ctx = $poly1305->init($total_key);
for ($i = 0;$i < 256;++$i) {
	for ($j = 0;$j < count($all_key);++$j)
		$all_key[$j] = $i;
	for ($j = 0;$j < $i;++$j)
		$all_msg[$j] = $i;
	$mac = $salt->crypto_onetimeauth($all_msg, $i, $all_key);
	$poly1305->update($total_ctx, $mac, 16);
}
$poly1305->finish($total_ctx, $mac);
$result &= Salt::equal($total_mac, $mac);

for ($i = 0, $l = count($mac);$i < $l;++$i) {
	printf("0x%02x", $mac[$i]);
	if ($i < ($l-1)) printf(",");
	if ($i % 8 == 7) printf("\n");
}

printf($result);
printf("\n");
printf("memory peak: %s\n", memory_get_peak_usage(true));
